# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-11-14 02:47
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('username', models.CharField(default=b'', max_length=255)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
        ),
        migrations.CreateModel(
            name='BrowserExtension',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salesforce_id', models.CharField(db_index=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('last_modified_by_id', models.CharField(blank=True, max_length=255, null=True)),
                ('connection_sent_id', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('version', models.CharField(blank=True, max_length=255, null=True)),
                ('system_mod_stamp', models.DateTimeField(blank=True, null=True)),
                ('last_referenced_date', models.DateTimeField(blank=True, null=True)),
                ('fb_updated_secret', models.CharField(blank=True, max_length=255, null=True)),
                ('owner_id', models.CharField(blank=True, max_length=255, null=True)),
                ('connection_reveived_id', models.CharField(blank=True, max_length=255, null=True)),
                ('ad_account_status_last_checked', models.CharField(blank=True, max_length=255, null=True)),
                ('fb_friends', models.CharField(blank=True, max_length=255, null=True)),
                ('secret_changed', models.BooleanField(default=False)),
                ('last_seen', models.DateTimeField(blank=True, null=True)),
                ('log_file_link', models.TextField(blank=True, max_length=1024, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('fb_secret', models.CharField(blank=True, max_length=255, null=True)),
                ('last_viewed_date', models.DateTimeField(blank=True, null=True)),
                ('ad_account_status', models.CharField(blank=True, max_length=255, null=True)),
                ('ad_account_active', models.BooleanField(default=False)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('login_notifications_disabled', models.BooleanField(default=False)),
                ('created_by_id', models.CharField(blank=True, max_length=255, null=True)),
                ('fb_email', models.CharField(blank=True, max_length=255, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Browser Extension',
                'verbose_name_plural': 'Browser Extensions',
            },
        ),
        migrations.CreateModel(
            name='Ec2Instance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salesforce_id', models.CharField(db_index=True, max_length=255, null=True)),
                ('is_deleted', models.BooleanField(default=False, verbose_name=b'Deleted')),
                ('name', models.CharField(blank=True, max_length=80, null=True)),
                ('created_date', models.DateTimeField()),
                ('last_modified_date', models.DateTimeField()),
                ('system_modstamp', models.DateTimeField()),
                ('last_viewed_date', models.DateTimeField(blank=True, null=True)),
                ('last_referenced_date', models.DateTimeField(blank=True, null=True)),
                ('hostname', models.CharField(blank=True, max_length=255, null=True)),
                ('instance_id', models.CharField(blank=True, db_column=b'Instance_ID__c', max_length=255, null=True, verbose_name=b'Instance ID')),
            ],
            options={
                'db_table': 'EC2_Instance__c',
                'verbose_name': 'EC2 Instance',
                'verbose_name_plural': 'EC2 Instances',
            },
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False, verbose_name=b'Deleted')),
                ('last_name', models.CharField(max_length=80)),
                ('first_name', models.CharField(blank=True, max_length=40, null=True)),
                ('salutation', models.CharField(blank=True, choices=[(b'Mr.', b'Mr.'), (b'Ms.', b'Ms.'), (b'Mrs.', b'Mrs.'), (b'Dr.', b'Dr.'), (b'Prof.', b'Prof.')], max_length=40, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=40, null=True)),
                ('suffix', models.CharField(blank=True, max_length=40, null=True)),
                ('name', models.CharField(max_length=121, verbose_name=b'Full Name')),
                ('title', models.CharField(blank=True, max_length=128, null=True)),
                ('company', models.CharField(max_length=255)),
                ('street', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=40, null=True)),
                ('state', models.CharField(blank=True, max_length=80, null=True, verbose_name=b'State/Province')),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True, verbose_name=b'Zip/Postal Code')),
                ('country', models.CharField(blank=True, max_length=80, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=15, max_digits=18, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=15, max_digits=18, null=True)),
                ('geocode_accuracy', models.CharField(blank=True, choices=[(b'Address', b'Address'), (b'NearAddress', b'NearAddress'), (b'Block', b'Block'), (b'Street', b'Street'), (b'ExtendedZip', b'ExtendedZip'), (b'Zip', b'Zip'), (b'Neighborhood', b'Neighborhood'), (b'City', b'City'), (b'County', b'County'), (b'State', b'State'), (b'Unknown', b'Unknown')], max_length=40, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=40, null=True)),
                ('mobile_phone', models.CharField(blank=True, max_length=40, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('photo_url', models.URLField(blank=True, null=True, verbose_name=b'Photo URL')),
                ('lead_source', models.CharField(blank=True, choices=[(b'Advertisement', b'Advertisement'), (b'Customer Event', b'Customer Event'), (b'Employee Referral', b'Employee Referral'), (b'Google AdWords', b'Google AdWords'), (b'Other', b'Other'), (b'Partner', b'Partner'), (b'Purchased List', b'Purchased List'), (b'Trade Show', b'Trade Show'), (b'Webinar', b'Webinar'), (b'Website', b'Website')], max_length=40, null=True)),
                ('status', models.CharField(choices=[(b'Available', b'Available'), (b'Banned', b'Banned'), (b'Qualified', b'Qualified'), (b'In-Progress', b'In-Progress')], max_length=40)),
                ('industry', models.CharField(blank=True, choices=[(b'Agriculture', b'Agriculture'), (b'Apparel', b'Apparel'), (b'Banking', b'Banking'), (b'Biotechnology', b'Biotechnology'), (b'Chemicals', b'Chemicals'), (b'Communications', b'Communications'), (b'Construction', b'Construction'), (b'Consulting', b'Consulting'), (b'Education', b'Education'), (b'Electronics', b'Electronics'), (b'Energy', b'Energy'), (b'Engineering', b'Engineering'), (b'Entertainment', b'Entertainment'), (b'Environmental', b'Environmental'), (b'Finance', b'Finance'), (b'Food & Beverage', b'Food & Beverage'), (b'Government', b'Government'), (b'Healthcare', b'Healthcare'), (b'Hospitality', b'Hospitality'), (b'Insurance', b'Insurance'), (b'Machinery', b'Machinery'), (b'Manufacturing', b'Manufacturing'), (b'Media', b'Media'), (b'Not For Profit', b'Not For Profit'), (b'Other', b'Other'), (b'Recreation', b'Recreation'), (b'Retail', b'Retail'), (b'Shipping', b'Shipping'), (b'Technology', b'Technology'), (b'Telecommunications', b'Telecommunications'), (b'Transportation', b'Transportation'), (b'Utilities', b'Utilities')], max_length=40, null=True)),
                ('rating', models.CharField(blank=True, choices=[(b'Hot', b'Hot'), (b'Warm', b'Warm'), (b'Cold', b'Cold')], max_length=40, null=True)),
                ('number_of_employees', models.IntegerField(blank=True, null=True, verbose_name=b'Employees')),
                ('is_converted', models.BooleanField(verbose_name=b'Converted')),
                ('converted_date', models.DateField(blank=True, null=True)),
                ('is_unread_by_owner', models.BooleanField(verbose_name=b'Unread By Owner')),
                ('created_date', models.DateTimeField()),
                ('last_modified_date', models.DateTimeField()),
                ('system_modstamp', models.DateTimeField()),
                ('last_activity_date', models.DateField(blank=True, null=True, verbose_name=b'Last Activity')),
                ('last_viewed_date', models.DateTimeField(blank=True, null=True)),
                ('last_referenced_date', models.DateTimeField(blank=True, null=True)),
                ('jigsaw', models.CharField(blank=True, max_length=20, null=True, verbose_name=b'Data.com Key')),
                ('jigsaw_contact_id', models.CharField(blank=True, max_length=20, null=True, verbose_name=b'Jigsaw Contact ID')),
                ('email_bounced_reason', models.CharField(blank=True, max_length=255, null=True)),
                ('email_bounced_date', models.DateTimeField(blank=True, null=True)),
                ('billed', models.BooleanField()),
                ('registered_ip_address', models.CharField(blank=True, db_column=b'Registered_IP_Address__c', max_length=255, null=True, verbose_name=b'Registered IP Address')),
                ('registered_isp', models.CharField(blank=True, db_column=b'Registered_ISP__c', max_length=255, null=True, verbose_name=b'Registered ISP')),
                ('login_notifications_disabled', models.BooleanField(db_column=b'Login_Notifications_Disabled__c', verbose_name=b'Login Notifications Disabled')),
                ('winprox_uid', models.CharField(blank=True, db_column=b'Winprox_UID__c', max_length=255, null=True, verbose_name=b'Winprox UID')),
                ('facebook_profile_url', models.CharField(blank=True, db_column=b'Facebook_Profile_Url__c', max_length=255, null=True, verbose_name=b'Facebook Profile Url')),
                ('utm_source', models.CharField(blank=True, db_column=b'utm_source__c', max_length=255, null=True, verbose_name=b'utm_source')),
                ('user_agent', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'UserAgent')),
                ('winprox_download_url', models.CharField(blank=True, db_column=b'Winprox_Download_Url__c', max_length=1300, null=True, verbose_name=b'Winprox Download Url')),
                ('activation_ip_address', models.CharField(blank=True, db_column=b'Activation_IP_Address__c', max_length=255, null=True, verbose_name=b'Activation IP Address')),
                ('activation_isp', models.CharField(blank=True, db_column=b'Activation_ISP__c', max_length=255, null=True, verbose_name=b'Activation ISP')),
                ('activation_seed_1', models.CharField(db_column=b'Activation_Seed_1__c', max_length=30, verbose_name=b'Activation Seed 1')),
                ('activation_key', models.CharField(blank=True, db_column=b'Activation_Key__c', max_length=1300, null=True, verbose_name=b'Activation Key')),
                ('qualified_lead', models.BooleanField(db_column=b'Qualified_Lead__c', verbose_name=b'Qualified Lead')),
                ('browser_extension_installed', models.BooleanField(db_column=b'Browser_Extension_Installed__c', verbose_name=b'Browser Extension Installed')),
                ('ad_account_status_last_checked', models.DateField(blank=True, db_column=b'Ad_Account_Status_Last_Checked__c', null=True, verbose_name=b'Ad Account Status Last Checked')),
                ('fb_friends', models.DecimalField(blank=True, db_column=b'FB_friends__c', decimal_places=0, max_digits=18, null=True, verbose_name=b'FB friends')),
                ('account_name', models.CharField(db_column=b'Account_Name__c', max_length=30, verbose_name=b'Account Name')),
                ('activation_url', models.CharField(blank=True, db_column=b'Activation_Url__c', max_length=1300, null=True, verbose_name=b'Activation Url')),
                ('banned_reason', models.CharField(blank=True, choices=[(b'FAKE', b'FAKE'), (b'BAD AD ACCOUNT', b'BAD AD ACCOUNT'), (b'SAME COMPUTER', b'SAME COMPUTER'), (b'OTHER', b'OTHER'), (b'DUPLICATE', b'DUPLICATE')], db_column=b'Banned_Reason__c', max_length=255, null=True, verbose_name=b'Banned Reason')),
                ('payment_first_name', models.CharField(blank=True, db_column=b'Payment_First_Name__c', max_length=255, null=True, verbose_name=b'Payment First Name')),
                ('payment_last_name', models.CharField(blank=True, db_column=b'Payment_Last_Name__c', max_length=255, null=True, verbose_name=b'Payment Last Name')),
                ('payment_zipcode', models.CharField(blank=True, db_column=b'Payment_Zipcode__c', max_length=40, null=True, verbose_name=b'Payment Zipcode')),
                ('payment_state', models.CharField(blank=True, db_column=b'Payment_State__c', max_length=255, null=True, verbose_name=b'Payment State')),
                ('payment_street', models.CharField(blank=True, db_column=b'Payment_Street__c', max_length=255, null=True, verbose_name=b'Payment Street')),
                ('payment_city', models.CharField(blank=True, db_column=b'Payment_City__c', max_length=255, null=True, verbose_name=b'Payment City')),
                ('winprox_status', models.CharField(blank=True, db_column=b'Winprox_Status__c', max_length=255, null=True, verbose_name=b'Winprox Status')),
                ('ad_account_status', models.CharField(blank=True, db_column=b'Ad_Account_Status__c', max_length=1300, null=True, verbose_name=b'Ad Account Status')),
                ('credentials_acquired', models.BooleanField(db_column=b'Credentials_Acquired__c', verbose_name=b'Credentials Acquired')),
                ('remarks', models.TextField(blank=True, null=True)),
                ('winprox_log_url', models.CharField(blank=True, db_column=b'Winprox_Log_Url__c', max_length=1300, null=True, verbose_name=b'Winprox Log Url')),
                ('winprox_last_seen', models.DateTimeField(blank=True, db_column=b'Winprox_Last_Seen__c', null=True, verbose_name=b'Winprox Last Seen')),
                ('winprox_tunnel_last_started', models.DateTimeField(blank=True, db_column=b'Winprox_Tunnel_Last_Started__c', null=True, verbose_name=b'Winprox Tunnel Last Started')),
                ('raspberry_pi_ec2_instance_hostname', models.CharField(blank=True, db_column=b'Raspberry_Pi_EC2_Instance_Hostname__c', max_length=1300, null=True, verbose_name=b'Raspberry Pi EC2 Instance Hostname')),
                ('winprox_online', models.BooleanField(db_column=b'Winprox_Online__c', verbose_name=b'Winprox Online')),
                ('touch_count', models.DecimalField(blank=True, db_column=b'Touch_Count__c', decimal_places=0, max_digits=18, null=True, verbose_name=b'Touch Count')),
                ('last_touch_date', models.DateTimeField(blank=True, db_column=b'Last_Touch_Date__c', null=True, verbose_name=b'Last Touch Date')),
                ('fb_email', models.CharField(blank=True, db_column=b'FB_email__c', max_length=1300, null=True, verbose_name=b'FB email')),
                ('fb_secret', models.CharField(blank=True, db_column=b'FB_secret__c', max_length=1300, null=True, verbose_name=b'FB secret')),
                ('old_pi_status', models.CharField(blank=True, db_column=b'Old_Pi_Status__c', max_length=1300, null=True, verbose_name=b'Old Pi Status')),
                ('google_account', models.BooleanField(db_column=b'Google_Account__c', verbose_name=b'Google Account')),
                ('facebook_account', models.BooleanField(db_column=b'Facebook_Account__c', verbose_name=b'Facebook Account')),
                ('secret_changed', models.BooleanField(db_column=b'Secret_Changed__c', verbose_name=b'Secret Changed')),
                ('facebook_account_status', models.CharField(blank=True, choices=[(b'Available', b'Available'), (b'Banned', b'Banned')], db_column=b'Facebook_Account_Status__c', max_length=255, null=True, verbose_name=b'Facebook Account Status')),
                ('google_account_status', models.CharField(blank=True, choices=[(b'Available', b'Available'), (b'Banned', b'Banned')], db_column=b'Google_Account_Status__c', max_length=255, null=True, verbose_name=b'Google Account Status')),
                ('dns_anonymization_updated', models.BooleanField(db_column=b'DNS_Anonymization_Updated__c', verbose_name=b'DNS Anonymization Updated')),
                ('wrong_password', models.BooleanField(db_column=b'Wrong_Password__c', verbose_name=b'Wrong Password')),
                ('bundler_paid', models.BooleanField(db_column=b'Bundler_Paid__c', verbose_name=b'Bundler Paid')),
                ('not_banned_status', models.CharField(blank=True, help_text=b'When Lead becomes Banned, previous Status is saved here to be restored later once Lead is unbanned.', max_length=20, null=True, verbose_name=b'NotBannedStatus')),
                ('browser_extension', models.ForeignKey(blank=True, db_column=b'Browser_Extension__c', null=True, on_delete=django.db.models.deletion.CASCADE, to='adsrental.BrowserExtension')),
                ('last_modified_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lead_lastmodifiedby_set', to=settings.AUTH_USER_MODEL)),
                ('master_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adsrental.Lead')),
            ],
            options={
                'db_table': 'Lead',
                'verbose_name': 'Lead',
                'verbose_name_plural': 'Leads',
            },
        ),
        migrations.CreateModel(
            name='RaspberryPi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False, verbose_name=b'Deleted')),
                ('name', models.CharField(max_length=80, verbose_name=b'Raspberry Pi ID')),
                ('created_date', models.DateTimeField()),
                ('last_modified_date', models.DateTimeField()),
                ('system_modstamp', models.DateTimeField()),
                ('last_viewed_date', models.DateTimeField(blank=True, null=True)),
                ('last_referenced_date', models.DateTimeField(blank=True, null=True)),
                ('version', models.CharField(blank=True, help_text=b'DO NOT EDIT', max_length=255, null=True)),
                ('tracking_number', models.CharField(blank=True, db_column=b'Tracking_Number__c', max_length=255, null=True, verbose_name=b'Tracking Number')),
                ('date_shipped', models.DateField(blank=True, db_column=b'Date_Shipped__c', null=True, verbose_name=b'Date Shipped')),
                ('delivery_status', models.TextField(blank=True, db_column=b'Delivery_Status__c', null=True, verbose_name=b'Delivery Status')),
                ('last_seen', models.DateTimeField(blank=True, db_column=b'Last_Seen__c', null=True, verbose_name=b'Last Seen')),
                ('status', models.CharField(blank=True, choices=[(b'Available', b'Available'), (b'Address Error', b'Address Error'), (b'Provisioned', b'Provisioned'), (b'Shipped', b'Shipped'), (b'Online', b'Online'), (b'Offline', b'Offline'), (b'Initializing', b'Initializing'), (b'Error', b'Error'), (b'Banned', b'Banned'), (b'Delivered', b'Delivered'), (b'Cancelled', b'Cancelled'), (b'Testing', b'Testing')], max_length=255, null=True)),
                ('farmbot_active', models.BooleanField(db_column=b'Farmbot_Active__c', help_text=b'DO NOT EDIT!', verbose_name=b'Farmbot Active')),
                ('ignore_city_check', models.BooleanField(db_column=b'Ignore_City_Check__c', help_text=b'BE CAREFUL USING THIS. REQUIRES REVGO VALIDATION.', verbose_name=b'Ignore City Check')),
                ('current_ip_address', models.CharField(blank=True, db_column=b'Current_IP_Address__c', max_length=255, null=True, verbose_name=b'Current IP Address')),
                ('current_isp', models.CharField(blank=True, db_column=b'Current_ISP__c', max_length=255, null=True, verbose_name=b'Current ISP')),
                ('current_city', models.CharField(blank=True, db_column=b'Current_City__c', max_length=255, null=True, verbose_name=b'Current City')),
                ('current_state_region', models.CharField(blank=True, db_column=b'Current_State_Region__c', max_length=255, null=True, verbose_name=b'Current State/Region')),
                ('current_country', models.CharField(blank=True, db_column=b'Current_Country__c', max_length=255, null=True, verbose_name=b'Current Country')),
                ('status_message', models.TextField(blank=True, db_column=b'Status_Message__c', null=True, verbose_name=b'Status Message')),
                ('rev_go_shipment_id', models.CharField(blank=True, db_column=b'RevGo_Shipment_ID__c', max_length=255, null=True, verbose_name=b'RevGo Shipment ID')),
                ('rev_go_feedback', models.CharField(blank=True, db_column=b'RevGo_Feedback__c', max_length=255, null=True, verbose_name=b'RevGo Feedback')),
                ('first_seen', models.DateTimeField(blank=True, db_column=b'First_Seen__c', null=True, verbose_name=b'First Seen')),
                ('ignore_location_check', models.BooleanField(db_column=b'Ignore_Location_Check__c', help_text=b'NEVER USE WITHOUT SUPREME APPROVAL!!!!!!', verbose_name=b'Ignore Location Check')),
                ('comment', models.TextField(blank=True, null=True)),
                ('online', models.BooleanField()),
                ('tunnel_last_tested', models.DateTimeField(blank=True, db_column=b'Tunnel_Last_Tested__c', null=True, verbose_name=b'Tunnel Last Tested')),
                ('tunnel_online', models.BooleanField(db_column=b'Tunnel_Online__c', verbose_name=b'Tunnel Online')),
                ('usps_tracking_code', models.CharField(blank=True, db_column=b'USPS_Tracking_Code__c', max_length=255, null=True, verbose_name=b'USPS Tracking Code')),
                ('logfile_url', models.CharField(blank=True, db_column=b'Logfile_Url__c', max_length=1300, null=True, verbose_name=b'Logfile Url')),
                ('rdp', models.CharField(blank=True, db_column=b'RDP__c', max_length=1300, null=True, verbose_name=b'RDP')),
                ('location_match', models.BooleanField(db_column=b'Location_Match__c', verbose_name=b'Location Match')),
                ('tested_internal', models.BooleanField(db_column=b'Tested_Internal__c', verbose_name=b'Tested Internal')),
                ('usps_feedback', models.TextField(blank=True, db_column=b'USPS_Feedback__c', null=True, verbose_name=b'USPS Feedback')),
                ('tested', models.BooleanField()),
                ('config_file_download', models.CharField(blank=True, db_column=b'Config_File_Download__c', max_length=1300, null=True, verbose_name=b'Config File Download')),
                ('rp_status', models.CharField(blank=True, choices=[(b'Offline', b'Offline'), (b'Online', b'Online')], db_column=b'RP_Status__c', max_length=255, null=True, verbose_name=b'RP Status')),
                ('delivered_internal', models.BooleanField(db_column=b'Delivered_Internal__c', verbose_name=b'Delivered Internal')),
                ('delivered', models.BooleanField()),
                ('ec2_instance', models.ForeignKey(blank=True, db_column=b'EC2_Instance__c', null=True, on_delete=django.db.models.deletion.CASCADE, to='adsrental.Ec2Instance')),
                ('linked_lead', models.ForeignKey(blank=True, db_column=b'Linked_Lead__c', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='raspberrypi_linkedlead_set', to='adsrental.Lead')),
            ],
            options={
                'db_table': 'Raspberry_Pi__c',
                'verbose_name': 'Raspberry Pi',
                'verbose_name_plural': 'Raspberry Pis',
            },
        ),
        migrations.AddField(
            model_name='lead',
            name='raspberry_pi',
            field=models.ForeignKey(blank=True, db_column=b'Raspberry_Pi__c', null=True, on_delete=django.db.models.deletion.CASCADE, to='adsrental.RaspberryPi'),
        ),
        migrations.AddField(
            model_name='lead',
            name='winprox_ec2_instance',
            field=models.ForeignKey(blank=True, db_column=b'Winprox_EC2_Instance__c', null=True, on_delete=django.db.models.deletion.CASCADE, to='adsrental.Ec2Instance'),
        ),
    ]
